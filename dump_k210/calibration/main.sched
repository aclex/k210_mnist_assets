.physical_buffer
%0 : <f32 [1,1,28,28] 3136 bytes of [1,1,28,28]> @input[0, 3136]
%1 : <f32 [32,1,3,3] 1152 bytes of [32,1,3,3]> @rdata[0, 1152]
%2 : <f32 [32] 128 bytes of [32]> @rdata[1152, 1280]
%3 : <f32 [1,32,28,28] 100352 bytes of [1,32,28,28]> @data[0, 100352]
%4 : <f32 [1,32,28,28] 100352 bytes of [1,32,28,28]> @data[100352, 200704]
%5 : <f32 [1,32,26,26] 86528 bytes of [1,32,26,26]> @data[13824, 100352]
%6 : <f32 [64,32,3,3] 73728 bytes of [64,32,3,3]> @rdata[1280, 75008]
%7 : <f32 [64] 256 bytes of [64]> @rdata[75008, 75264]
%8 : <f32 [1,64,26,26] 173056 bytes of [1,64,26,26]> @data[100352, 273408]
%9 : <f32 [1,64,26,26] 173056 bytes of [1,64,26,26]> @data[273408, 446464]
%10 : <f32 [1,64,24,24] 147456 bytes of [1,64,24,24]> @data[125952, 273408]
%11 : <f32 [1,64,6,6] 9216 bytes of [1,64,6,6]> @data[116736, 125952]
%12 : <f32 [10,64,3,3] 23040 bytes of [10,64,3,3]> @rdata[75264, 98304]
%13 : <f32 [10] 40 bytes of [10]> @rdata[98304, 98344]
%14 : <f32 [1,10,6,6] 1440 bytes of [1,10,6,6]> @data[115296, 116736]
%15 : <f32 [1,10,4,4] 640 bytes of [1,10,4,4]> @data[114656, 115296]
%16 : <f32 [1,10,1,1] 40 bytes of [1,10,1,1]> @data[114616, 114656]
%17 : <f32 [1,10] 40 bytes of [1,10]> @data[114576, 114616]
%18 : <f32 [1,1] 4 bytes of [1,1]> @data[114568, 114576]
%19 : <f32 [1,10] 40 bytes of [1,10]> @data[114528, 114568]
%20 : <f32 [1,10] 40 bytes of [1,10]> @data[114488, 114528]
%21 : <f32 [1,1] 4 bytes of [1,1]> @data[114480, 114488]
%22 : <f32 [1,10] 40 bytes of [1,10]> @data[114440, 114480]
%23 : <f32 [1,10] 40 bytes of [1,10]> @output[0, 40]

.compute_sequence
fn main(%0) : (<f32 [1,1,28,28] 3136 bytes of [1,1,28,28]>) -> (<f32 [1,10] 40 bytes of [1,10]>)
{
    %0 = Input() : () -> (<f32 [1,1,28,28] 3136 bytes of [1,1,28,28]>)
    %1 = Constant() : () -> (<f32 [32,1,3,3] 1152 bytes of [32,1,3,3]>)
    %2 = Constant() : () -> (<f32 [32] 128 bytes of [32]>)
    %3 = FakeKPUConv2D(%0, %1, %2) : (<f32 [1,1,28,28] 3136 bytes of [1,1,28,28]>, <f32 [32,1,3,3] 1152 bytes of [32,1,3,3]>, <f32 [32] 128 bytes of [32]>) -> (<f32 [1,32,28,28] 100352 bytes of [1,32,28,28]>)
    %4 = FusedUnary(%3) : (<f32 [1,32,28,28] 100352 bytes of [1,32,28,28]>) -> (<f32 [1,32,28,28] 100352 bytes of [1,32,28,28]>)
    %5 = Pad(%4) : (<f32 [1,32,28,28] 100352 bytes of [1,32,28,28]>) -> (<f32 [1,32,26,26] 86528 bytes of [1,32,26,26]>)
    %6 = Constant() : () -> (<f32 [64,32,3,3] 73728 bytes of [64,32,3,3]>)
    %7 = Constant() : () -> (<f32 [64] 256 bytes of [64]>)
    %8 = FakeKPUConv2D(%5, %6, %7) : (<f32 [1,32,26,26] 86528 bytes of [1,32,26,26]>, <f32 [64,32,3,3] 73728 bytes of [64,32,3,3]>, <f32 [64] 256 bytes of [64]>) -> (<f32 [1,64,26,26] 173056 bytes of [1,64,26,26]>)
    %9 = FusedUnary(%8) : (<f32 [1,64,26,26] 173056 bytes of [1,64,26,26]>) -> (<f32 [1,64,26,26] 173056 bytes of [1,64,26,26]>)
    %10 = Pad(%9) : (<f32 [1,64,26,26] 173056 bytes of [1,64,26,26]>) -> (<f32 [1,64,24,24] 147456 bytes of [1,64,24,24]>)
    %11 = ReduceWindow2D(%10) : (<f32 [1,64,24,24] 147456 bytes of [1,64,24,24]>) -> (<f32 [1,64,6,6] 9216 bytes of [1,64,6,6]>)
    %12 = Constant() : () -> (<f32 [10,64,3,3] 23040 bytes of [10,64,3,3]>)
    %13 = Constant() : () -> (<f32 [10] 40 bytes of [10]>)
    %14 = FakeKPUConv2D(%11, %12, %13) : (<f32 [1,64,6,6] 9216 bytes of [1,64,6,6]>, <f32 [10,64,3,3] 23040 bytes of [10,64,3,3]>, <f32 [10] 40 bytes of [10]>) -> (<f32 [1,10,6,6] 1440 bytes of [1,10,6,6]>)
    %15 = Pad(%14) : (<f32 [1,10,6,6] 1440 bytes of [1,10,6,6]>) -> (<f32 [1,10,4,4] 640 bytes of [1,10,4,4]>)
    %16 = ReduceWindow2D(%15) : (<f32 [1,10,4,4] 640 bytes of [1,10,4,4]>) -> (<f32 [1,10,1,1] 40 bytes of [1,10,1,1]>)
    %17 = Bitcast(%16) : (<f32 [1,10,1,1] 40 bytes of [1,10,1,1]>) -> (<f32 [1,10] 40 bytes of [1,10]>)
    %18[0, 4] = Reduce(%17) : (<f32 [1,10] 40 bytes of [1,10]>) -> (<f32 [1,1] 4 bytes of [1,1]>)
    %19 = Binary(%17, %18[0, 4]) : (<f32 [1,10] 40 bytes of [1,10]>, <f32 [1,1] 4 bytes of [1,1]>) -> (<f32 [1,10] 40 bytes of [1,10]>)
    %20 = FusedUnary(%19) : (<f32 [1,10] 40 bytes of [1,10]>) -> (<f32 [1,10] 40 bytes of [1,10]>)
    %21[0, 4] = Reduce(%20) : (<f32 [1,10] 40 bytes of [1,10]>) -> (<f32 [1,1] 4 bytes of [1,1]>)
    %22 = Binary(%20, %21[0, 4]) : (<f32 [1,10] 40 bytes of [1,10]>, <f32 [1,1] 4 bytes of [1,1]>) -> (<f32 [1,10] 40 bytes of [1,10]>)
    %23 = FusedUnary(%22) : (<f32 [1,10] 40 bytes of [1,10]>) -> (<f32 [1,10] 40 bytes of [1,10]>)
    return %23 : (<f32 [1,10] 40 bytes of [1,10]>)
}
